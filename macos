#!/bin/sh

# Forked from https://github.com/laurendorman/komputer-maschine

komputer_echo() {
  local fmt="$1"; shift

  printf "\n$fmt\n" "$@"
}

append_to_bashrc() {
  local text="$1" bashrc
  local skip_new_line="${2:-0}"

  bashrc="$HOME/.bashrc"

  if ! grep -Fqs "$text" "$bashrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$bashrc"
    else
      printf "\n%s\n" "$text" >> "$bashrc"
    fi
  fi
}

# Let the user know if the script fails
trap 'ret=$?; test $ret -ne 0 && printf "\nkomputer maschine failed. :(\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

append_to_bashrc 'export PATH="$HOME/.bin:$PATH"'

if [ ! -d "/usr/local" ]; then
  sudo mkdir /usr/local
fi

HOMEBREW_PREFIX="/usr/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi


# Install XCode
if type xcode-select >&- && xpath=$( xcode-select --print-path ) &&
  test -d "${xpath}" && test -x "${xpath}" ; then
  komputer_echo "XCode already installed. Skipping..."
else
  komputer_echo "Installing XCode..."
  xcode-select --install
fi

if ! command -v brew >/dev/null; then
  komputer_echo "Installing Homebrew..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    # shellcheck disable=SC2016
    append_to_bashrc 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
  else
  komputer_echo "Updating Homebrew..."
  brew update
fi

komputer_echo "Installing services..."
brew bundle --file=- <<EOF
tap "homebrew/services"
tap "homebrew/cask"
tap "homebrew/cask-drivers"
tap "heroku/brew"

# Unix
brew "git"
brew "vim"

# Programming languages
brew "python3"

# Tools
brew "npm"
brew "heroku"
EOF

# Check for Node
if test ! $(brew list | grep "^node$"); then
  komputer_echo 'Installing Node...'
  brew install node
else
  komputer_echo 'Node already installed. Skipping...'
fi

applications=(
  1password
  alfred
  code
  docker
  dropbox
  expressvpn
  figma
  firefox
  google-chrome
  hyper
  notion
  remember-the-milk
  slack
  sonos
  sourcetree
  spotify
  sublime-text
  thefuck
  the-unarchiver
)

komputer_echo "Installing applications..."

install_application() {
  if test ! $(brew cask list | grep $application); then
    komputer_echo "Installing $application..."
    brew cask install --appdir="/Applications" $application
  else
    komputer_echo "$application already installed. Skipping..."
  fi
}

for application in "${applications[@]}"
  do install_application $application
done

# Clean up Homebrew files
komputer_echo "Cleaning up files..."
brew cleanup

komputer_echo "Congratulations! Your komputer maschine is ready to go."
